const fetch = require("node-fetch");

exports.run = async (client, message, args) => {
    let scanUrl = message.content.match(/^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/m)
    console.log(scanUrl)
    if (scanUrl) {
        try {
            const getData = async (url) => {
                let response = await fetch('https://www.hybrid-analysis.com/api/v2/quick-scan/url', {
                    method: 'POST',
                    headers: {
                        'accept': 'application/json',
                        'user-agent': 'Falcon Sandbox',
                        'api-key': process.env.HYBRID_ANALYSIS_API,
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `scan_type=all&url=${url}&no_share_third_party=true`
                });
                let data = await response.json()
                return data.scanners
            }



            getData(url)
        } catch (err) {
            console.log(err)
        }
    }
};
exports.help = {
    name: "scan",
    description: "simulation of joining member",
    usage: "<prefix>simjoin",
    example: "~simjoin"
}
exports.conf = {
    aliases: ["check"],
    cooldown: 5
}